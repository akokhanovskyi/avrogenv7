// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     schema.avro
 */
package avro

import (
	"github.com/actgardner/gogen-avro/v7/compiler"
	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
	"io"
)

type TestRecord struct {
	Kvs map[string]*UnionStringBytesNull `json:"kvs"`
}

const TestRecordAvroCRC64Fingerprint = "&\\\xc3\x13Wmn9"

func NewTestRecord() *TestRecord {
	return &TestRecord{}
}

func DeserializeTestRecord(r io.Reader) (*TestRecord, error) {
	t := NewTestRecord()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeTestRecordFromSchema(r io.Reader, schema string) (*TestRecord, error) {
	t := NewTestRecord()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeTestRecord(r *TestRecord, w io.Writer) error {
	var err error
	err = writeMapUnionStringBytesNull(r.Kvs, w)
	if err != nil {
		return err
	}
	return err
}

func (r *TestRecord) Serialize(w io.Writer) error {
	return writeTestRecord(r, w)
}

func (r *TestRecord) Schema() string {
	return "{\"fields\":[{\"name\":\"kvs\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"bytes\",\"null\"]}}],\"name\":\"org.example.gen.v1.TestRecord\",\"type\":\"record\"}"
}

func (r *TestRecord) SchemaName() string {
	return "org.example.gen.v1.TestRecord"
}

func (_ *TestRecord) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *TestRecord) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *TestRecord) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *TestRecord) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *TestRecord) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *TestRecord) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *TestRecord) SetString(v string)   { panic("Unsupported operation") }
func (_ *TestRecord) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *TestRecord) Get(i int) types.Field {
	switch i {
	case 0:
		r.Kvs = make(map[string]*UnionStringBytesNull)

		return &MapUnionStringBytesNullWrapper{Target: &r.Kvs}
	}
	panic("Unknown field index")
}

func (r *TestRecord) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *TestRecord) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ *TestRecord) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *TestRecord) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *TestRecord) Finalize()                        {}

func (_ *TestRecord) AvroCRC64Fingerprint() []byte {
	return []byte(TestRecordAvroCRC64Fingerprint)
}
